name: "ci"

on:
- push

jobs:
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        python-version: [ '3.10', '3.11' ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - uses: ./.github/actions/setup-environment
        with:
          os: ${{ matrix.os }}
          python-version: ${{ matrix.python-version }}

      - name: Install pytest
        run: |     
            poetry run pip install --no-cache-dir \
                       pytest=="7.1.3" \
                       pytest-cov=="3.0.0" \
                       pytest-html=="3.1.1" \
                       pytest-random-order=="1.0.4"

      - name: Run tests
        run : |
          mkdir -p artifacts/tests/coverage
          mkdir -p artifacts/tests/html-coverage
          mkdir -p artifacts/tests/html-report
          
          poetry run pytest --cov=cvx --random-order --verbose \
                            --html=artifacts/tests/html-report/report.html \
                            --cov-report xml:artifacts/tests/coverage/coverage.xml \
                            --cov-report html:artifacts/tests/html-coverage \
                            tests/

      - name: Archive tests results
        uses: actions/upload-artifact@v3
        with:
          name: tests
          path: artifacts/tests

  dependencies:
    runs-on: "ubuntu-latest"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: ./.github/actions/setup-environment
        with:
          os: ${{ runner.os }}
          python-version: "3.11"

      - name: Export dependencies
        run: |
          poetry show --only main --tree
          mkdir -p artifacts/build
          poetry show --only main --tree > artifacts/build/show.txt
          tree artifacts
          cat artifacts/build/show.txt

      - name: Archive dependencies
        uses: actions/upload-artifact@v3
        with:
          name: dependencies
          path: artifacts/build

  count:
    runs-on: "ubuntu-latest"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: ./.github/actions/setup-environment
        with:
          os: ${{ runner.os }}
          python-version: "3.11"

      - name: count
        run: |
            pip install pygount==1.5.1
            mkdir -p artifacts/lines
            pygount --format=summary --out=artifacts/lines/lines.txt cvx
            tree artifacts

      - name: Archive counts
        uses: actions/upload-artifact@v3
        with:
          name: count
          path: artifacts/lines

  sphinx:
    runs-on: "ubuntu-latest"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: ./.github/actions/setup-environment
        with:
          os: ${{ runner.os }}
          python-version: "3.11"

      - name: Install sphinx
        run: |
          poetry run pip install --no-cache-dir \
                     sphinx==5.0.2 \
                     sphinx-autoapi==1.8.4 \
                     sphinx-rtd-theme==1.0.0 \
                     recommonmark==0.7.1

      - name: Build sphinx
        run: |
          mkdir -p artifacts/sphinx
          poetry run sphinx-build -b html book/sphinx/ artifacts/sphinx
          ls -all artifacts/sphinx

      - name: Archive sphinx documentation
        uses: actions/upload-artifact@v3
        with:
          name: sphinx
          path: artifacts/sphinx

  jupyter:
    needs: [test, sphinx, count, dependencies]

    runs-on: "ubuntu-latest"
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3

      - uses: ./.github/actions/setup-environment
        with:
          os: ${{ runner.os }}
          python-version: "3.11"

      - name: Install jupyterbook
        run: |
          # poetry run pip install jupyter-book
          poetry run python -m ipykernel install --user --name="simulator"

      # Build the book
      - name: Build the book
        run: |
          poetry run jupyter-book clean book
          poetry run jupyter-book build book

      # Download the counting
      - name: Download count results
        uses: actions/download-artifact@v3
        with:
          name: count
          path: book/_build/html/artifacts/lines

      # Download the sphinx artifact
      - name: Download Sphinx page
        uses: actions/download-artifact@v3
        with:
          name: sphinx
          path: book/_build/html/artifacts/sphinx

      # Download the dependencies artifact
      - name: Download the dependencies file
        uses: actions/download-artifact@v3
        with:
          name: dependencies
          path: book/_build/html/artifacts/build

      # Download the test artifact
      - name: Download the test files
        uses: actions/download-artifact@v3
        with:
          name: tests
          path: book/_build/html/artifacts/tests

      # Check uploads
      - name: Inspect upload
        run : |
          tree book/_build/html/artifacts

      # Push the book's HTML to github-pages
      - name: GitHub Pages action
        uses: peaceiris/actions-gh-pages@v3.6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: book/_build/html