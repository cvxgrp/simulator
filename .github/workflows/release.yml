name: Bump version and publish
# Release workflow for publishing to PyPI
# This workflow handles version bumping, package building, and publishing to PyPI.
# It is manually triggered and requires appropriate permissions.

on:
  workflow_dispatch:  # Manually triggered by a user with appropriate permissions

permissions:
  contents: write  # Write access to repository contents for tagging

jobs:
  tagging:
    # Version tagging job
    # Generates a new version tag for the release based on semantic versioning
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.tag_step.outputs.new_tag }}  # Output the new tag for use in subsequent jobs

    steps:
      - name: Generate Tag
        id: tag_step
        uses: tschm/cradle/actions/tag@v0.3.01  # Use the tag action to generate a new version tag
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  # GitHub token for authentication

  build:
    # Package building job
    # Builds the Python package with the new version tag
    runs-on: ubuntu-latest
    needs: tagging  # Depends on the tagging job to get the new version
    steps:
      - name: Checkout [${{ github.repository }}]
        uses: actions/checkout@v4

      - name: Update version in pyproject.toml
        run: |
          echo "Updating version to ${{ needs.tagging.outputs.new_tag }}"
          VERSION="${{ needs.tagging.outputs.new_tag }}"
          # Use a regex to find and replace the version line (works for PEP 621 or Poetry)
          sed -i -E "s/^version = \".*\"/version = \"${VERSION}\"/" pyproject.toml

      - name: Build package
        run: |
          python -m pip install hatch
          hatch build

      - name: Upload distribution artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 1


      #- name: build
      #  uses: tschm/cradle/actions/build@v0.1.71  # Use the build action to build the package
      #  with:
      #    tag: ${{ needs.tagging.outputs.new_tag }}  # Use the tag from the tagging job

  publish:
    # PyPI publishing job
    # Publishes the built package to PyPI using trusted publishing
    needs: build  # Depends on the build job to have the package ready
    runs-on: ubuntu-latest
    environment: release  # Use the release environment for secrets and protection

    permissions:
       contents: read  # Read-only access to repository contents
       id-token: write  # Write access to ID token for trusted publishing

    steps:
      - uses: actions/download-artifact@v4  # Download the built package artifacts
        with:
          name: dist  # Artifact name
          path: dist  # Download path

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1  # Use PyPI's official action for trusted publishing
