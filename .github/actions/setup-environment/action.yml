name: Setup the Python Environment

description: "Construct a Python environment for ci/cd"

on:
  workflow_call:
    inputs:
      cache_version:
        description: 'Value gets appended to the cache key and will therefore invalidate the cache if it changes'
        required: true
      os:
        description: 'OS'
        type: string
        required: true
      python-version:
        description: 'Python version'
        type: string
        required: true

runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}

    #----------------------------------------------
    #  -----  install & configure poetry  -----
    #----------------------------------------------
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
       virtualenvs-create: true
       virtualenvs-in-project: true
       installer-parallel: true

    - name: Install jupyterbook
      shell: bash
      run: |
        poetry run pip install --no-cache-dir jupyter-book

    - name: Install sphinx
      shell: bash
      run: | 
          poetry run pip install --no-cache-dir \
                      sphinx==5.0.2 \
                      sphinx-autoapi==1.8.4 \
                      sphinx-rtd-theme==1.0.0 \
                      recommonmark==0.7.1

    - name: Install pytest
      shell: bash
      run: |     
          poetry run pip install --no-cache-dir \
                      pytest=="7.1.3" \
                      pytest-cov=="4.0.0" \
                      pytest-html=="3.1.1" \
                      pytest-random-order=="1.0.4"

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ inputs.os }}-${{ inputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    #----------------------------------------------
    # install your root project, if required
    #----------------------------------------------
    - name: Install project
      shell: bash
      run: poetry install --no-interaction


